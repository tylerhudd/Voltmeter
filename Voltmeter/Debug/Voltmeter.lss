
Voltmeter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000c5c  00000cd0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c5c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000cf6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d54  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000d94  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a5b  00000000  00000000  00000de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007aa  00000000  00000000  0000183f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003cb  00000000  00000000  00001fe9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a0  00000000  00000000  000023b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000432  00000000  00000000  00002454  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000170  00000000  00000000  00002886  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000029f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e5       	ldi	r30, 0x5C	; 92
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 ac 00 	call	0x158	; 0x158 <main>
  8e:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <lcd_cmd>:
	lcd_cmd(0xC0);				// set position
}

void lcd_cmd(char cmd_out)
{
	data=cmd_out;					// set the command across LCD data register
  96:	85 b9       	out	0x05, r24	; 5
	PORTD=(0<<rs)|(0<<rw)|(1<<en);	// enable LCD to receive command
  98:	84 e0       	ldi	r24, 0x04	; 4
  9a:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9c:	83 ec       	ldi	r24, 0xC3	; 195
  9e:	99 e0       	ldi	r25, 0x09	; 9
  a0:	01 97       	sbiw	r24, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <lcd_cmd+0xa>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <lcd_cmd+0x10>
  a6:	00 00       	nop
	_delay_ms(10);
	PORTD=(0<<rs)|(0<<rw)|(0<<en);	// latch last command
  a8:	1b b8       	out	0x0b, r1	; 11
  aa:	83 ec       	ldi	r24, 0xC3	; 195
  ac:	99 e0       	ldi	r25, 0x09	; 9
  ae:	01 97       	sbiw	r24, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <lcd_cmd+0x18>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <lcd_cmd+0x1e>
  b4:	00 00       	nop
  b6:	08 95       	ret

000000b8 <lcd_data>:
	_delay_ms(10);
}

void lcd_data(char data_out)
{
	data=data_out;					// set the data across the LCD data register	
  b8:	85 b9       	out	0x05, r24	; 5
	PORTD=(1<<rs)|(0<<rw)|(1<<en);	// enable LCD to receive data
  ba:	85 e0       	ldi	r24, 0x05	; 5
  bc:	8b b9       	out	0x0b, r24	; 11
  be:	83 ec       	ldi	r24, 0xC3	; 195
  c0:	99 e0       	ldi	r25, 0x09	; 9
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <lcd_data+0xa>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <lcd_data+0x10>
  c8:	00 00       	nop
	_delay_ms(10);
	PORTD=(1<<rs)|(0<<rw)|(0<<en);	// latch last data
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	8b b9       	out	0x0b, r24	; 11
  ce:	83 ec       	ldi	r24, 0xC3	; 195
  d0:	99 e0       	ldi	r25, 0x09	; 9
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <lcd_data+0x1a>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <lcd_data+0x20>
  d8:	00 00       	nop
  da:	08 95       	ret

000000dc <lcd_str>:
	_delay_ms(10);
}

void lcd_str(char *str)
{
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	ec 01       	movw	r28, r24
	unsigned int i=0;
	while(str[i]!='\0')		// print each character in string to LCD
  e2:	88 81       	ld	r24, Y
  e4:	88 23       	and	r24, r24
  e6:	31 f0       	breq	.+12     	; 0xf4 <lcd_str+0x18>
  e8:	21 96       	adiw	r28, 0x01	; 1
	{
		lcd_data(str[i]);
  ea:	0e 94 5c 00 	call	0xb8	; 0xb8 <lcd_data>
}

void lcd_str(char *str)
{
	unsigned int i=0;
	while(str[i]!='\0')		// print each character in string to LCD
  ee:	89 91       	ld	r24, Y+
  f0:	81 11       	cpse	r24, r1
  f2:	fb cf       	rjmp	.-10     	; 0xea <lcd_str+0xe>
	{
		lcd_data(str[i]);
		i++;
	}
}
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	08 95       	ret

000000fa <lcd_init>:
	}
}

void lcd_init()
{
	lcd_cmd(0X38);				// initialize 2 lines, 5x7 font for 16x2 LCD
  fa:	88 e3       	ldi	r24, 0x38	; 56
  fc:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_cmd(0X0C);				// display on, cursor off
 100:	8c e0       	ldi	r24, 0x0C	; 12
 102:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_cmd(0X01);				// clear screen
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_cmd(0X83);				// set position
 10c:	83 e8       	ldi	r24, 0x83	; 131
 10e:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_str("Voltmeter");
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_str>
	lcd_cmd(0xC0);				// set position
 11a:	80 ec       	ldi	r24, 0xC0	; 192
 11c:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
 120:	08 95       	ret

00000122 <adc_init>:
	}
}

void adc_init()
{
	ADMUX = (1<<REFS0);	// Aref = Vcc
 122:	80 e4       	ldi	r24, 0x40	; 64
 124:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	
	/* the ADC needs a clock signal between 50kHz and 200kHz, with internal 8MHz clock,
	   a prescaler of 64 gives the ADC a clock of 125kHz */
	
	ADCSRA = (1<<ADPS2)|(1<<ADPS1)|(1<<ADEN);	// enable ADC, set prescaler to 64
 128:	86 e8       	ldi	r24, 0x86	; 134
 12a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 12e:	08 95       	ret

00000130 <read_adc>:
}

uint16_t read_adc(uint8_t channel)
{
	ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);	// select ADC channel
 130:	ec e7       	ldi	r30, 0x7C	; 124
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	90 81       	ld	r25, Z
 136:	8f 70       	andi	r24, 0x0F	; 15
 138:	90 7f       	andi	r25, 0xF0	; 240
 13a:	89 2b       	or	r24, r25
 13c:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);						// select single conversion mode
 13e:	ea e7       	ldi	r30, 0x7A	; 122
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	80 64       	ori	r24, 0x40	; 64
 146:	80 83       	st	Z, r24
	while( ADCSRA & (1<<ADSC) );				// wait until ADC conversion is complete
 148:	80 81       	ld	r24, Z
 14a:	86 fd       	sbrc	r24, 6
 14c:	fd cf       	rjmp	.-6      	; 0x148 <read_adc+0x18>
	return ADC;
 14e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 152:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 156:	08 95       	ret

00000158 <main>:
void lcd_str(char *str);				// prints a string to the LCD screen
void adc_init();						// sets the reference voltage and clock prescaler for the ADC
uint16_t read_adc(uint8_t channel);		// reads and returns the voltage input at an ADC channel

int main()
{
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
 15c:	cd b7       	in	r28, 0x3d	; 61
 15e:	de b7       	in	r29, 0x3e	; 62
 160:	60 97       	sbiw	r28, 0x10	; 16
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	f8 94       	cli
 166:	de bf       	out	0x3e, r29	; 62
 168:	0f be       	out	0x3f, r0	; 63
 16a:	cd bf       	out	0x3d, r28	; 61
	int intV0;
	float diffV0;
	int decV0;
	char number[16];	// character array for converting doubles to string
	
	DDRB=0XFF;			// Port B: data register for LCD - set to output
 16c:	8f ef       	ldi	r24, 0xFF	; 255
 16e:	84 b9       	out	0x04, r24	; 4
	DDRD=0XFF;			// Port D: command bits for LCD - set to output
 170:	8a b9       	out	0x0a, r24	; 10
	
	adc_init();
 172:	0e 94 91 00 	call	0x122	; 0x122 <adc_init>
			sprintf(number, "%u.00%u V", intV0, decV0);		// convert voltage to string
		}
		else if(decV0 < 100){
			sprintf(number, "%u.0%u V", intV0, decV0);		// convert voltage to string
		}
		else sprintf(number, "%u.%u V", intV0, decV0);		// convert voltage to string
 176:	0f 2e       	mov	r0, r31
 178:	fd e1       	ldi	r31, 0x1D	; 29
 17a:	8f 2e       	mov	r8, r31
 17c:	f1 e0       	ldi	r31, 0x01	; 1
 17e:	9f 2e       	mov	r9, r31
 180:	f0 2d       	mov	r31, r0
 182:	8e 01       	movw	r16, r28
 184:	0f 5f       	subi	r16, 0xFF	; 255
 186:	1f 4f       	sbci	r17, 0xFF	; 255
		
		if(decV0 < 10){
			sprintf(number, "%u.00%u V", intV0, decV0);		// convert voltage to string
		}
		else if(decV0 < 100){
			sprintf(number, "%u.0%u V", intV0, decV0);		// convert voltage to string
 188:	0f 2e       	mov	r0, r31
 18a:	f4 e1       	ldi	r31, 0x14	; 20
 18c:	af 2e       	mov	r10, r31
 18e:	f1 e0       	ldi	r31, 0x01	; 1
 190:	bf 2e       	mov	r11, r31
 192:	f0 2d       	mov	r31, r0
		intV0 = (int) realV0;
		diffV0 = realV0 - (float)intV0;
		decV0 = (int) (diffV0*1000);
		
		if(decV0 < 10){
			sprintf(number, "%u.00%u V", intV0, decV0);		// convert voltage to string
 194:	0f 2e       	mov	r0, r31
 196:	fa e0       	ldi	r31, 0x0A	; 10
 198:	2f 2e       	mov	r2, r31
 19a:	f1 e0       	ldi	r31, 0x01	; 1
 19c:	3f 2e       	mov	r3, r31
 19e:	f0 2d       	mov	r31, r0
	
	adc_init();
	
	while(1)
	{
		lcd_init();
 1a0:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
		realV0 = (float)(read_adc(7)*5.0/1023.0);	// read ADC channel 0 and calculate voltage
 1a4:	87 e0       	ldi	r24, 0x07	; 7
 1a6:	0e 94 98 00 	call	0x130	; 0x130 <read_adc>
 1aa:	bc 01       	movw	r22, r24
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	0e 94 59 02 	call	0x4b2	; 0x4b2 <__floatunsisf>
 1b4:	20 e0       	ldi	r18, 0x00	; 0
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	40 ea       	ldi	r20, 0xA0	; 160
 1ba:	50 e4       	ldi	r21, 0x40	; 64
 1bc:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__mulsf3>
 1c0:	20 e0       	ldi	r18, 0x00	; 0
 1c2:	30 ec       	ldi	r19, 0xC0	; 192
 1c4:	4f e7       	ldi	r20, 0x7F	; 127
 1c6:	54 e4       	ldi	r21, 0x44	; 68
 1c8:	0e 94 b1 01 	call	0x362	; 0x362 <__divsf3>
 1cc:	2b 01       	movw	r4, r22
 1ce:	3c 01       	movw	r6, r24
		intV0 = (int) realV0;
 1d0:	0e 94 23 02 	call	0x446	; 0x446 <__fixsfsi>
 1d4:	6b 01       	movw	r12, r22
 1d6:	7c 01       	movw	r14, r24
		diffV0 = realV0 - (float)intV0;
 1d8:	07 2e       	mov	r0, r23
 1da:	00 0c       	add	r0, r0
 1dc:	88 0b       	sbc	r24, r24
 1de:	99 0b       	sbc	r25, r25
 1e0:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__floatsisf>
 1e4:	9b 01       	movw	r18, r22
 1e6:	ac 01       	movw	r20, r24
 1e8:	c3 01       	movw	r24, r6
 1ea:	b2 01       	movw	r22, r4
 1ec:	0e 94 44 01 	call	0x288	; 0x288 <__subsf3>
		decV0 = (int) (diffV0*1000);
 1f0:	20 e0       	ldi	r18, 0x00	; 0
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	4a e7       	ldi	r20, 0x7A	; 122
 1f6:	54 e4       	ldi	r21, 0x44	; 68
 1f8:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__mulsf3>
 1fc:	0e 94 23 02 	call	0x446	; 0x446 <__fixsfsi>
 200:	86 2f       	mov	r24, r22
 202:	97 2f       	mov	r25, r23
		
		if(decV0 < 10){
 204:	8a 30       	cpi	r24, 0x0A	; 10
 206:	91 05       	cpc	r25, r1
 208:	84 f4       	brge	.+32     	; 0x22a <main+0xd2>
			sprintf(number, "%u.00%u V", intV0, decV0);		// convert voltage to string
 20a:	7f 93       	push	r23
 20c:	6f 93       	push	r22
 20e:	df 92       	push	r13
 210:	cf 92       	push	r12
 212:	3f 92       	push	r3
 214:	2f 92       	push	r2
 216:	1f 93       	push	r17
 218:	0f 93       	push	r16
 21a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <sprintf>
 21e:	0f b6       	in	r0, 0x3f	; 63
 220:	f8 94       	cli
 222:	de bf       	out	0x3e, r29	; 62
 224:	0f be       	out	0x3f, r0	; 63
 226:	cd bf       	out	0x3d, r28	; 61
 228:	22 c0       	rjmp	.+68     	; 0x26e <main+0x116>
		}
		else if(decV0 < 100){
 22a:	84 36       	cpi	r24, 0x64	; 100
 22c:	91 05       	cpc	r25, r1
 22e:	84 f4       	brge	.+32     	; 0x250 <main+0xf8>
			sprintf(number, "%u.0%u V", intV0, decV0);		// convert voltage to string
 230:	7f 93       	push	r23
 232:	6f 93       	push	r22
 234:	df 92       	push	r13
 236:	cf 92       	push	r12
 238:	bf 92       	push	r11
 23a:	af 92       	push	r10
 23c:	1f 93       	push	r17
 23e:	0f 93       	push	r16
 240:	0e 94 54 03 	call	0x6a8	; 0x6a8 <sprintf>
 244:	0f b6       	in	r0, 0x3f	; 63
 246:	f8 94       	cli
 248:	de bf       	out	0x3e, r29	; 62
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	cd bf       	out	0x3d, r28	; 61
 24e:	0f c0       	rjmp	.+30     	; 0x26e <main+0x116>
		}
		else sprintf(number, "%u.%u V", intV0, decV0);		// convert voltage to string
 250:	7f 93       	push	r23
 252:	6f 93       	push	r22
 254:	df 92       	push	r13
 256:	cf 92       	push	r12
 258:	9f 92       	push	r9
 25a:	8f 92       	push	r8
 25c:	1f 93       	push	r17
 25e:	0f 93       	push	r16
 260:	0e 94 54 03 	call	0x6a8	; 0x6a8 <sprintf>
 264:	0f b6       	in	r0, 0x3f	; 63
 266:	f8 94       	cli
 268:	de bf       	out	0x3e, r29	; 62
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	cd bf       	out	0x3d, r28	; 61
		
		lcd_str(number);					// print voltage
 26e:	c8 01       	movw	r24, r16
 270:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_str>
 274:	9f e9       	ldi	r25, 0x9F	; 159
 276:	26 e8       	ldi	r18, 0x86	; 134
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	91 50       	subi	r25, 0x01	; 1
 27c:	20 40       	sbci	r18, 0x00	; 0
 27e:	80 40       	sbci	r24, 0x00	; 0
 280:	e1 f7       	brne	.-8      	; 0x27a <main+0x122>
 282:	00 c0       	rjmp	.+0      	; 0x284 <main+0x12c>
 284:	00 00       	nop
 286:	8c cf       	rjmp	.-232    	; 0x1a0 <main+0x48>

00000288 <__subsf3>:
 288:	50 58       	subi	r21, 0x80	; 128

0000028a <__addsf3>:
 28a:	bb 27       	eor	r27, r27
 28c:	aa 27       	eor	r26, r26
 28e:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <__addsf3x>
 292:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_round>
 296:	0e 94 9f 02 	call	0x53e	; 0x53e <__fp_pscA>
 29a:	38 f0       	brcs	.+14     	; 0x2aa <__addsf3+0x20>
 29c:	0e 94 a6 02 	call	0x54c	; 0x54c <__fp_pscB>
 2a0:	20 f0       	brcs	.+8      	; 0x2aa <__addsf3+0x20>
 2a2:	39 f4       	brne	.+14     	; 0x2b2 <__addsf3+0x28>
 2a4:	9f 3f       	cpi	r25, 0xFF	; 255
 2a6:	19 f4       	brne	.+6      	; 0x2ae <__addsf3+0x24>
 2a8:	26 f4       	brtc	.+8      	; 0x2b2 <__addsf3+0x28>
 2aa:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_nan>
 2ae:	0e f4       	brtc	.+2      	; 0x2b2 <__addsf3+0x28>
 2b0:	e0 95       	com	r30
 2b2:	e7 fb       	bst	r30, 7
 2b4:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_inf>

000002b8 <__addsf3x>:
 2b8:	e9 2f       	mov	r30, r25
 2ba:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_split3>
 2be:	58 f3       	brcs	.-42     	; 0x296 <__addsf3+0xc>
 2c0:	ba 17       	cp	r27, r26
 2c2:	62 07       	cpc	r22, r18
 2c4:	73 07       	cpc	r23, r19
 2c6:	84 07       	cpc	r24, r20
 2c8:	95 07       	cpc	r25, r21
 2ca:	20 f0       	brcs	.+8      	; 0x2d4 <__addsf3x+0x1c>
 2cc:	79 f4       	brne	.+30     	; 0x2ec <__addsf3x+0x34>
 2ce:	a6 f5       	brtc	.+104    	; 0x338 <__addsf3x+0x80>
 2d0:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_zero>
 2d4:	0e f4       	brtc	.+2      	; 0x2d8 <__addsf3x+0x20>
 2d6:	e0 95       	com	r30
 2d8:	0b 2e       	mov	r0, r27
 2da:	ba 2f       	mov	r27, r26
 2dc:	a0 2d       	mov	r26, r0
 2de:	0b 01       	movw	r0, r22
 2e0:	b9 01       	movw	r22, r18
 2e2:	90 01       	movw	r18, r0
 2e4:	0c 01       	movw	r0, r24
 2e6:	ca 01       	movw	r24, r20
 2e8:	a0 01       	movw	r20, r0
 2ea:	11 24       	eor	r1, r1
 2ec:	ff 27       	eor	r31, r31
 2ee:	59 1b       	sub	r21, r25
 2f0:	99 f0       	breq	.+38     	; 0x318 <__addsf3x+0x60>
 2f2:	59 3f       	cpi	r21, 0xF9	; 249
 2f4:	50 f4       	brcc	.+20     	; 0x30a <__addsf3x+0x52>
 2f6:	50 3e       	cpi	r21, 0xE0	; 224
 2f8:	68 f1       	brcs	.+90     	; 0x354 <__addsf3x+0x9c>
 2fa:	1a 16       	cp	r1, r26
 2fc:	f0 40       	sbci	r31, 0x00	; 0
 2fe:	a2 2f       	mov	r26, r18
 300:	23 2f       	mov	r18, r19
 302:	34 2f       	mov	r19, r20
 304:	44 27       	eor	r20, r20
 306:	58 5f       	subi	r21, 0xF8	; 248
 308:	f3 cf       	rjmp	.-26     	; 0x2f0 <__addsf3x+0x38>
 30a:	46 95       	lsr	r20
 30c:	37 95       	ror	r19
 30e:	27 95       	ror	r18
 310:	a7 95       	ror	r26
 312:	f0 40       	sbci	r31, 0x00	; 0
 314:	53 95       	inc	r21
 316:	c9 f7       	brne	.-14     	; 0x30a <__addsf3x+0x52>
 318:	7e f4       	brtc	.+30     	; 0x338 <__addsf3x+0x80>
 31a:	1f 16       	cp	r1, r31
 31c:	ba 0b       	sbc	r27, r26
 31e:	62 0b       	sbc	r22, r18
 320:	73 0b       	sbc	r23, r19
 322:	84 0b       	sbc	r24, r20
 324:	ba f0       	brmi	.+46     	; 0x354 <__addsf3x+0x9c>
 326:	91 50       	subi	r25, 0x01	; 1
 328:	a1 f0       	breq	.+40     	; 0x352 <__addsf3x+0x9a>
 32a:	ff 0f       	add	r31, r31
 32c:	bb 1f       	adc	r27, r27
 32e:	66 1f       	adc	r22, r22
 330:	77 1f       	adc	r23, r23
 332:	88 1f       	adc	r24, r24
 334:	c2 f7       	brpl	.-16     	; 0x326 <__addsf3x+0x6e>
 336:	0e c0       	rjmp	.+28     	; 0x354 <__addsf3x+0x9c>
 338:	ba 0f       	add	r27, r26
 33a:	62 1f       	adc	r22, r18
 33c:	73 1f       	adc	r23, r19
 33e:	84 1f       	adc	r24, r20
 340:	48 f4       	brcc	.+18     	; 0x354 <__addsf3x+0x9c>
 342:	87 95       	ror	r24
 344:	77 95       	ror	r23
 346:	67 95       	ror	r22
 348:	b7 95       	ror	r27
 34a:	f7 95       	ror	r31
 34c:	9e 3f       	cpi	r25, 0xFE	; 254
 34e:	08 f0       	brcs	.+2      	; 0x352 <__addsf3x+0x9a>
 350:	b0 cf       	rjmp	.-160    	; 0x2b2 <__addsf3+0x28>
 352:	93 95       	inc	r25
 354:	88 0f       	add	r24, r24
 356:	08 f0       	brcs	.+2      	; 0x35a <__addsf3x+0xa2>
 358:	99 27       	eor	r25, r25
 35a:	ee 0f       	add	r30, r30
 35c:	97 95       	ror	r25
 35e:	87 95       	ror	r24
 360:	08 95       	ret

00000362 <__divsf3>:
 362:	0e 94 c5 01 	call	0x38a	; 0x38a <__divsf3x>
 366:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_round>
 36a:	0e 94 a6 02 	call	0x54c	; 0x54c <__fp_pscB>
 36e:	58 f0       	brcs	.+22     	; 0x386 <__divsf3+0x24>
 370:	0e 94 9f 02 	call	0x53e	; 0x53e <__fp_pscA>
 374:	40 f0       	brcs	.+16     	; 0x386 <__divsf3+0x24>
 376:	29 f4       	brne	.+10     	; 0x382 <__divsf3+0x20>
 378:	5f 3f       	cpi	r21, 0xFF	; 255
 37a:	29 f0       	breq	.+10     	; 0x386 <__divsf3+0x24>
 37c:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_inf>
 380:	51 11       	cpse	r21, r1
 382:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__fp_szero>
 386:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_nan>

0000038a <__divsf3x>:
 38a:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_split3>
 38e:	68 f3       	brcs	.-38     	; 0x36a <__divsf3+0x8>

00000390 <__divsf3_pse>:
 390:	99 23       	and	r25, r25
 392:	b1 f3       	breq	.-20     	; 0x380 <__divsf3+0x1e>
 394:	55 23       	and	r21, r21
 396:	91 f3       	breq	.-28     	; 0x37c <__divsf3+0x1a>
 398:	95 1b       	sub	r25, r21
 39a:	55 0b       	sbc	r21, r21
 39c:	bb 27       	eor	r27, r27
 39e:	aa 27       	eor	r26, r26
 3a0:	62 17       	cp	r22, r18
 3a2:	73 07       	cpc	r23, r19
 3a4:	84 07       	cpc	r24, r20
 3a6:	38 f0       	brcs	.+14     	; 0x3b6 <__divsf3_pse+0x26>
 3a8:	9f 5f       	subi	r25, 0xFF	; 255
 3aa:	5f 4f       	sbci	r21, 0xFF	; 255
 3ac:	22 0f       	add	r18, r18
 3ae:	33 1f       	adc	r19, r19
 3b0:	44 1f       	adc	r20, r20
 3b2:	aa 1f       	adc	r26, r26
 3b4:	a9 f3       	breq	.-22     	; 0x3a0 <__divsf3_pse+0x10>
 3b6:	35 d0       	rcall	.+106    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3b8:	0e 2e       	mov	r0, r30
 3ba:	3a f0       	brmi	.+14     	; 0x3ca <__divsf3_pse+0x3a>
 3bc:	e0 e8       	ldi	r30, 0x80	; 128
 3be:	32 d0       	rcall	.+100    	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3c0:	91 50       	subi	r25, 0x01	; 1
 3c2:	50 40       	sbci	r21, 0x00	; 0
 3c4:	e6 95       	lsr	r30
 3c6:	00 1c       	adc	r0, r0
 3c8:	ca f7       	brpl	.-14     	; 0x3bc <__divsf3_pse+0x2c>
 3ca:	2b d0       	rcall	.+86     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3cc:	fe 2f       	mov	r31, r30
 3ce:	29 d0       	rcall	.+82     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3d0:	66 0f       	add	r22, r22
 3d2:	77 1f       	adc	r23, r23
 3d4:	88 1f       	adc	r24, r24
 3d6:	bb 1f       	adc	r27, r27
 3d8:	26 17       	cp	r18, r22
 3da:	37 07       	cpc	r19, r23
 3dc:	48 07       	cpc	r20, r24
 3de:	ab 07       	cpc	r26, r27
 3e0:	b0 e8       	ldi	r27, 0x80	; 128
 3e2:	09 f0       	breq	.+2      	; 0x3e6 <__divsf3_pse+0x56>
 3e4:	bb 0b       	sbc	r27, r27
 3e6:	80 2d       	mov	r24, r0
 3e8:	bf 01       	movw	r22, r30
 3ea:	ff 27       	eor	r31, r31
 3ec:	93 58       	subi	r25, 0x83	; 131
 3ee:	5f 4f       	sbci	r21, 0xFF	; 255
 3f0:	3a f0       	brmi	.+14     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f2:	9e 3f       	cpi	r25, 0xFE	; 254
 3f4:	51 05       	cpc	r21, r1
 3f6:	78 f0       	brcs	.+30     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3f8:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_inf>
 3fc:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__fp_szero>
 400:	5f 3f       	cpi	r21, 0xFF	; 255
 402:	e4 f3       	brlt	.-8      	; 0x3fc <__divsf3_pse+0x6c>
 404:	98 3e       	cpi	r25, 0xE8	; 232
 406:	d4 f3       	brlt	.-12     	; 0x3fc <__divsf3_pse+0x6c>
 408:	86 95       	lsr	r24
 40a:	77 95       	ror	r23
 40c:	67 95       	ror	r22
 40e:	b7 95       	ror	r27
 410:	f7 95       	ror	r31
 412:	9f 5f       	subi	r25, 0xFF	; 255
 414:	c9 f7       	brne	.-14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 416:	88 0f       	add	r24, r24
 418:	91 1d       	adc	r25, r1
 41a:	96 95       	lsr	r25
 41c:	87 95       	ror	r24
 41e:	97 f9       	bld	r25, 7
 420:	08 95       	ret
 422:	e1 e0       	ldi	r30, 0x01	; 1
 424:	66 0f       	add	r22, r22
 426:	77 1f       	adc	r23, r23
 428:	88 1f       	adc	r24, r24
 42a:	bb 1f       	adc	r27, r27
 42c:	62 17       	cp	r22, r18
 42e:	73 07       	cpc	r23, r19
 430:	84 07       	cpc	r24, r20
 432:	ba 07       	cpc	r27, r26
 434:	20 f0       	brcs	.+8      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 436:	62 1b       	sub	r22, r18
 438:	73 0b       	sbc	r23, r19
 43a:	84 0b       	sbc	r24, r20
 43c:	ba 0b       	sbc	r27, r26
 43e:	ee 1f       	adc	r30, r30
 440:	88 f7       	brcc	.-30     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 442:	e0 95       	com	r30
 444:	08 95       	ret

00000446 <__fixsfsi>:
 446:	0e 94 2a 02 	call	0x454	; 0x454 <__fixunssfsi>
 44a:	68 94       	set
 44c:	b1 11       	cpse	r27, r1
 44e:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__fp_szero>
 452:	08 95       	ret

00000454 <__fixunssfsi>:
 454:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_splitA>
 458:	88 f0       	brcs	.+34     	; 0x47c <__fixunssfsi+0x28>
 45a:	9f 57       	subi	r25, 0x7F	; 127
 45c:	98 f0       	brcs	.+38     	; 0x484 <__fixunssfsi+0x30>
 45e:	b9 2f       	mov	r27, r25
 460:	99 27       	eor	r25, r25
 462:	b7 51       	subi	r27, 0x17	; 23
 464:	b0 f0       	brcs	.+44     	; 0x492 <__fixunssfsi+0x3e>
 466:	e1 f0       	breq	.+56     	; 0x4a0 <__fixunssfsi+0x4c>
 468:	66 0f       	add	r22, r22
 46a:	77 1f       	adc	r23, r23
 46c:	88 1f       	adc	r24, r24
 46e:	99 1f       	adc	r25, r25
 470:	1a f0       	brmi	.+6      	; 0x478 <__fixunssfsi+0x24>
 472:	ba 95       	dec	r27
 474:	c9 f7       	brne	.-14     	; 0x468 <__fixunssfsi+0x14>
 476:	14 c0       	rjmp	.+40     	; 0x4a0 <__fixunssfsi+0x4c>
 478:	b1 30       	cpi	r27, 0x01	; 1
 47a:	91 f0       	breq	.+36     	; 0x4a0 <__fixunssfsi+0x4c>
 47c:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__fp_zero>
 480:	b1 e0       	ldi	r27, 0x01	; 1
 482:	08 95       	ret
 484:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_zero>
 488:	67 2f       	mov	r22, r23
 48a:	78 2f       	mov	r23, r24
 48c:	88 27       	eor	r24, r24
 48e:	b8 5f       	subi	r27, 0xF8	; 248
 490:	39 f0       	breq	.+14     	; 0x4a0 <__fixunssfsi+0x4c>
 492:	b9 3f       	cpi	r27, 0xF9	; 249
 494:	cc f3       	brlt	.-14     	; 0x488 <__fixunssfsi+0x34>
 496:	86 95       	lsr	r24
 498:	77 95       	ror	r23
 49a:	67 95       	ror	r22
 49c:	b3 95       	inc	r27
 49e:	d9 f7       	brne	.-10     	; 0x496 <__fixunssfsi+0x42>
 4a0:	3e f4       	brtc	.+14     	; 0x4b0 <__fixunssfsi+0x5c>
 4a2:	90 95       	com	r25
 4a4:	80 95       	com	r24
 4a6:	70 95       	com	r23
 4a8:	61 95       	neg	r22
 4aa:	7f 4f       	sbci	r23, 0xFF	; 255
 4ac:	8f 4f       	sbci	r24, 0xFF	; 255
 4ae:	9f 4f       	sbci	r25, 0xFF	; 255
 4b0:	08 95       	ret

000004b2 <__floatunsisf>:
 4b2:	e8 94       	clt
 4b4:	09 c0       	rjmp	.+18     	; 0x4c8 <__floatsisf+0x12>

000004b6 <__floatsisf>:
 4b6:	97 fb       	bst	r25, 7
 4b8:	3e f4       	brtc	.+14     	; 0x4c8 <__floatsisf+0x12>
 4ba:	90 95       	com	r25
 4bc:	80 95       	com	r24
 4be:	70 95       	com	r23
 4c0:	61 95       	neg	r22
 4c2:	7f 4f       	sbci	r23, 0xFF	; 255
 4c4:	8f 4f       	sbci	r24, 0xFF	; 255
 4c6:	9f 4f       	sbci	r25, 0xFF	; 255
 4c8:	99 23       	and	r25, r25
 4ca:	a9 f0       	breq	.+42     	; 0x4f6 <__floatsisf+0x40>
 4cc:	f9 2f       	mov	r31, r25
 4ce:	96 e9       	ldi	r25, 0x96	; 150
 4d0:	bb 27       	eor	r27, r27
 4d2:	93 95       	inc	r25
 4d4:	f6 95       	lsr	r31
 4d6:	87 95       	ror	r24
 4d8:	77 95       	ror	r23
 4da:	67 95       	ror	r22
 4dc:	b7 95       	ror	r27
 4de:	f1 11       	cpse	r31, r1
 4e0:	f8 cf       	rjmp	.-16     	; 0x4d2 <__floatsisf+0x1c>
 4e2:	fa f4       	brpl	.+62     	; 0x522 <__floatsisf+0x6c>
 4e4:	bb 0f       	add	r27, r27
 4e6:	11 f4       	brne	.+4      	; 0x4ec <__floatsisf+0x36>
 4e8:	60 ff       	sbrs	r22, 0
 4ea:	1b c0       	rjmp	.+54     	; 0x522 <__floatsisf+0x6c>
 4ec:	6f 5f       	subi	r22, 0xFF	; 255
 4ee:	7f 4f       	sbci	r23, 0xFF	; 255
 4f0:	8f 4f       	sbci	r24, 0xFF	; 255
 4f2:	9f 4f       	sbci	r25, 0xFF	; 255
 4f4:	16 c0       	rjmp	.+44     	; 0x522 <__floatsisf+0x6c>
 4f6:	88 23       	and	r24, r24
 4f8:	11 f0       	breq	.+4      	; 0x4fe <__floatsisf+0x48>
 4fa:	96 e9       	ldi	r25, 0x96	; 150
 4fc:	11 c0       	rjmp	.+34     	; 0x520 <__floatsisf+0x6a>
 4fe:	77 23       	and	r23, r23
 500:	21 f0       	breq	.+8      	; 0x50a <__floatsisf+0x54>
 502:	9e e8       	ldi	r25, 0x8E	; 142
 504:	87 2f       	mov	r24, r23
 506:	76 2f       	mov	r23, r22
 508:	05 c0       	rjmp	.+10     	; 0x514 <__floatsisf+0x5e>
 50a:	66 23       	and	r22, r22
 50c:	71 f0       	breq	.+28     	; 0x52a <__floatsisf+0x74>
 50e:	96 e8       	ldi	r25, 0x86	; 134
 510:	86 2f       	mov	r24, r22
 512:	70 e0       	ldi	r23, 0x00	; 0
 514:	60 e0       	ldi	r22, 0x00	; 0
 516:	2a f0       	brmi	.+10     	; 0x522 <__floatsisf+0x6c>
 518:	9a 95       	dec	r25
 51a:	66 0f       	add	r22, r22
 51c:	77 1f       	adc	r23, r23
 51e:	88 1f       	adc	r24, r24
 520:	da f7       	brpl	.-10     	; 0x518 <__floatsisf+0x62>
 522:	88 0f       	add	r24, r24
 524:	96 95       	lsr	r25
 526:	87 95       	ror	r24
 528:	97 f9       	bld	r25, 7
 52a:	08 95       	ret

0000052c <__fp_inf>:
 52c:	97 f9       	bld	r25, 7
 52e:	9f 67       	ori	r25, 0x7F	; 127
 530:	80 e8       	ldi	r24, 0x80	; 128
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	60 e0       	ldi	r22, 0x00	; 0
 536:	08 95       	ret

00000538 <__fp_nan>:
 538:	9f ef       	ldi	r25, 0xFF	; 255
 53a:	80 ec       	ldi	r24, 0xC0	; 192
 53c:	08 95       	ret

0000053e <__fp_pscA>:
 53e:	00 24       	eor	r0, r0
 540:	0a 94       	dec	r0
 542:	16 16       	cp	r1, r22
 544:	17 06       	cpc	r1, r23
 546:	18 06       	cpc	r1, r24
 548:	09 06       	cpc	r0, r25
 54a:	08 95       	ret

0000054c <__fp_pscB>:
 54c:	00 24       	eor	r0, r0
 54e:	0a 94       	dec	r0
 550:	12 16       	cp	r1, r18
 552:	13 06       	cpc	r1, r19
 554:	14 06       	cpc	r1, r20
 556:	05 06       	cpc	r0, r21
 558:	08 95       	ret

0000055a <__fp_round>:
 55a:	09 2e       	mov	r0, r25
 55c:	03 94       	inc	r0
 55e:	00 0c       	add	r0, r0
 560:	11 f4       	brne	.+4      	; 0x566 <__fp_round+0xc>
 562:	88 23       	and	r24, r24
 564:	52 f0       	brmi	.+20     	; 0x57a <__fp_round+0x20>
 566:	bb 0f       	add	r27, r27
 568:	40 f4       	brcc	.+16     	; 0x57a <__fp_round+0x20>
 56a:	bf 2b       	or	r27, r31
 56c:	11 f4       	brne	.+4      	; 0x572 <__fp_round+0x18>
 56e:	60 ff       	sbrs	r22, 0
 570:	04 c0       	rjmp	.+8      	; 0x57a <__fp_round+0x20>
 572:	6f 5f       	subi	r22, 0xFF	; 255
 574:	7f 4f       	sbci	r23, 0xFF	; 255
 576:	8f 4f       	sbci	r24, 0xFF	; 255
 578:	9f 4f       	sbci	r25, 0xFF	; 255
 57a:	08 95       	ret

0000057c <__fp_split3>:
 57c:	57 fd       	sbrc	r21, 7
 57e:	90 58       	subi	r25, 0x80	; 128
 580:	44 0f       	add	r20, r20
 582:	55 1f       	adc	r21, r21
 584:	59 f0       	breq	.+22     	; 0x59c <__fp_splitA+0x10>
 586:	5f 3f       	cpi	r21, 0xFF	; 255
 588:	71 f0       	breq	.+28     	; 0x5a6 <__fp_splitA+0x1a>
 58a:	47 95       	ror	r20

0000058c <__fp_splitA>:
 58c:	88 0f       	add	r24, r24
 58e:	97 fb       	bst	r25, 7
 590:	99 1f       	adc	r25, r25
 592:	61 f0       	breq	.+24     	; 0x5ac <__fp_splitA+0x20>
 594:	9f 3f       	cpi	r25, 0xFF	; 255
 596:	79 f0       	breq	.+30     	; 0x5b6 <__fp_splitA+0x2a>
 598:	87 95       	ror	r24
 59a:	08 95       	ret
 59c:	12 16       	cp	r1, r18
 59e:	13 06       	cpc	r1, r19
 5a0:	14 06       	cpc	r1, r20
 5a2:	55 1f       	adc	r21, r21
 5a4:	f2 cf       	rjmp	.-28     	; 0x58a <__fp_split3+0xe>
 5a6:	46 95       	lsr	r20
 5a8:	f1 df       	rcall	.-30     	; 0x58c <__fp_splitA>
 5aa:	08 c0       	rjmp	.+16     	; 0x5bc <__fp_splitA+0x30>
 5ac:	16 16       	cp	r1, r22
 5ae:	17 06       	cpc	r1, r23
 5b0:	18 06       	cpc	r1, r24
 5b2:	99 1f       	adc	r25, r25
 5b4:	f1 cf       	rjmp	.-30     	; 0x598 <__fp_splitA+0xc>
 5b6:	86 95       	lsr	r24
 5b8:	71 05       	cpc	r23, r1
 5ba:	61 05       	cpc	r22, r1
 5bc:	08 94       	sec
 5be:	08 95       	ret

000005c0 <__fp_zero>:
 5c0:	e8 94       	clt

000005c2 <__fp_szero>:
 5c2:	bb 27       	eor	r27, r27
 5c4:	66 27       	eor	r22, r22
 5c6:	77 27       	eor	r23, r23
 5c8:	cb 01       	movw	r24, r22
 5ca:	97 f9       	bld	r25, 7
 5cc:	08 95       	ret

000005ce <__mulsf3>:
 5ce:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__mulsf3x>
 5d2:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_round>
 5d6:	0e 94 9f 02 	call	0x53e	; 0x53e <__fp_pscA>
 5da:	38 f0       	brcs	.+14     	; 0x5ea <__mulsf3+0x1c>
 5dc:	0e 94 a6 02 	call	0x54c	; 0x54c <__fp_pscB>
 5e0:	20 f0       	brcs	.+8      	; 0x5ea <__mulsf3+0x1c>
 5e2:	95 23       	and	r25, r21
 5e4:	11 f0       	breq	.+4      	; 0x5ea <__mulsf3+0x1c>
 5e6:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_inf>
 5ea:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_nan>
 5ee:	11 24       	eor	r1, r1
 5f0:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__fp_szero>

000005f4 <__mulsf3x>:
 5f4:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_split3>
 5f8:	70 f3       	brcs	.-36     	; 0x5d6 <__mulsf3+0x8>

000005fa <__mulsf3_pse>:
 5fa:	95 9f       	mul	r25, r21
 5fc:	c1 f3       	breq	.-16     	; 0x5ee <__mulsf3+0x20>
 5fe:	95 0f       	add	r25, r21
 600:	50 e0       	ldi	r21, 0x00	; 0
 602:	55 1f       	adc	r21, r21
 604:	62 9f       	mul	r22, r18
 606:	f0 01       	movw	r30, r0
 608:	72 9f       	mul	r23, r18
 60a:	bb 27       	eor	r27, r27
 60c:	f0 0d       	add	r31, r0
 60e:	b1 1d       	adc	r27, r1
 610:	63 9f       	mul	r22, r19
 612:	aa 27       	eor	r26, r26
 614:	f0 0d       	add	r31, r0
 616:	b1 1d       	adc	r27, r1
 618:	aa 1f       	adc	r26, r26
 61a:	64 9f       	mul	r22, r20
 61c:	66 27       	eor	r22, r22
 61e:	b0 0d       	add	r27, r0
 620:	a1 1d       	adc	r26, r1
 622:	66 1f       	adc	r22, r22
 624:	82 9f       	mul	r24, r18
 626:	22 27       	eor	r18, r18
 628:	b0 0d       	add	r27, r0
 62a:	a1 1d       	adc	r26, r1
 62c:	62 1f       	adc	r22, r18
 62e:	73 9f       	mul	r23, r19
 630:	b0 0d       	add	r27, r0
 632:	a1 1d       	adc	r26, r1
 634:	62 1f       	adc	r22, r18
 636:	83 9f       	mul	r24, r19
 638:	a0 0d       	add	r26, r0
 63a:	61 1d       	adc	r22, r1
 63c:	22 1f       	adc	r18, r18
 63e:	74 9f       	mul	r23, r20
 640:	33 27       	eor	r19, r19
 642:	a0 0d       	add	r26, r0
 644:	61 1d       	adc	r22, r1
 646:	23 1f       	adc	r18, r19
 648:	84 9f       	mul	r24, r20
 64a:	60 0d       	add	r22, r0
 64c:	21 1d       	adc	r18, r1
 64e:	82 2f       	mov	r24, r18
 650:	76 2f       	mov	r23, r22
 652:	6a 2f       	mov	r22, r26
 654:	11 24       	eor	r1, r1
 656:	9f 57       	subi	r25, 0x7F	; 127
 658:	50 40       	sbci	r21, 0x00	; 0
 65a:	9a f0       	brmi	.+38     	; 0x682 <__mulsf3_pse+0x88>
 65c:	f1 f0       	breq	.+60     	; 0x69a <__mulsf3_pse+0xa0>
 65e:	88 23       	and	r24, r24
 660:	4a f0       	brmi	.+18     	; 0x674 <__mulsf3_pse+0x7a>
 662:	ee 0f       	add	r30, r30
 664:	ff 1f       	adc	r31, r31
 666:	bb 1f       	adc	r27, r27
 668:	66 1f       	adc	r22, r22
 66a:	77 1f       	adc	r23, r23
 66c:	88 1f       	adc	r24, r24
 66e:	91 50       	subi	r25, 0x01	; 1
 670:	50 40       	sbci	r21, 0x00	; 0
 672:	a9 f7       	brne	.-22     	; 0x65e <__mulsf3_pse+0x64>
 674:	9e 3f       	cpi	r25, 0xFE	; 254
 676:	51 05       	cpc	r21, r1
 678:	80 f0       	brcs	.+32     	; 0x69a <__mulsf3_pse+0xa0>
 67a:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_inf>
 67e:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__fp_szero>
 682:	5f 3f       	cpi	r21, 0xFF	; 255
 684:	e4 f3       	brlt	.-8      	; 0x67e <__mulsf3_pse+0x84>
 686:	98 3e       	cpi	r25, 0xE8	; 232
 688:	d4 f3       	brlt	.-12     	; 0x67e <__mulsf3_pse+0x84>
 68a:	86 95       	lsr	r24
 68c:	77 95       	ror	r23
 68e:	67 95       	ror	r22
 690:	b7 95       	ror	r27
 692:	f7 95       	ror	r31
 694:	e7 95       	ror	r30
 696:	9f 5f       	subi	r25, 0xFF	; 255
 698:	c1 f7       	brne	.-16     	; 0x68a <__mulsf3_pse+0x90>
 69a:	fe 2b       	or	r31, r30
 69c:	88 0f       	add	r24, r24
 69e:	91 1d       	adc	r25, r1
 6a0:	96 95       	lsr	r25
 6a2:	87 95       	ror	r24
 6a4:	97 f9       	bld	r25, 7
 6a6:	08 95       	ret

000006a8 <sprintf>:
 6a8:	ae e0       	ldi	r26, 0x0E	; 14
 6aa:	b0 e0       	ldi	r27, 0x00	; 0
 6ac:	ea e5       	ldi	r30, 0x5A	; 90
 6ae:	f3 e0       	ldi	r31, 0x03	; 3
 6b0:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__prologue_saves__+0x1c>
 6b4:	0d 89       	ldd	r16, Y+21	; 0x15
 6b6:	1e 89       	ldd	r17, Y+22	; 0x16
 6b8:	86 e0       	ldi	r24, 0x06	; 6
 6ba:	8c 83       	std	Y+4, r24	; 0x04
 6bc:	1a 83       	std	Y+2, r17	; 0x02
 6be:	09 83       	std	Y+1, r16	; 0x01
 6c0:	8f ef       	ldi	r24, 0xFF	; 255
 6c2:	9f e7       	ldi	r25, 0x7F	; 127
 6c4:	9e 83       	std	Y+6, r25	; 0x06
 6c6:	8d 83       	std	Y+5, r24	; 0x05
 6c8:	ae 01       	movw	r20, r28
 6ca:	47 5e       	subi	r20, 0xE7	; 231
 6cc:	5f 4f       	sbci	r21, 0xFF	; 255
 6ce:	6f 89       	ldd	r22, Y+23	; 0x17
 6d0:	78 8d       	ldd	r23, Y+24	; 0x18
 6d2:	ce 01       	movw	r24, r28
 6d4:	01 96       	adiw	r24, 0x01	; 1
 6d6:	0e 94 77 03 	call	0x6ee	; 0x6ee <vfprintf>
 6da:	2f 81       	ldd	r18, Y+7	; 0x07
 6dc:	38 85       	ldd	r19, Y+8	; 0x08
 6de:	f8 01       	movw	r30, r16
 6e0:	e2 0f       	add	r30, r18
 6e2:	f3 1f       	adc	r31, r19
 6e4:	10 82       	st	Z, r1
 6e6:	2e 96       	adiw	r28, 0x0e	; 14
 6e8:	e4 e0       	ldi	r30, 0x04	; 4
 6ea:	0c 94 1f 06 	jmp	0xc3e	; 0xc3e <__epilogue_restores__+0x1c>

000006ee <vfprintf>:
 6ee:	ac e0       	ldi	r26, 0x0C	; 12
 6f0:	b0 e0       	ldi	r27, 0x00	; 0
 6f2:	ed e7       	ldi	r30, 0x7D	; 125
 6f4:	f3 e0       	ldi	r31, 0x03	; 3
 6f6:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__prologue_saves__>
 6fa:	7c 01       	movw	r14, r24
 6fc:	6b 01       	movw	r12, r22
 6fe:	8a 01       	movw	r16, r20
 700:	fc 01       	movw	r30, r24
 702:	17 82       	std	Z+7, r1	; 0x07
 704:	16 82       	std	Z+6, r1	; 0x06
 706:	83 81       	ldd	r24, Z+3	; 0x03
 708:	81 ff       	sbrs	r24, 1
 70a:	bd c1       	rjmp	.+890    	; 0xa86 <__stack+0x187>
 70c:	ce 01       	movw	r24, r28
 70e:	01 96       	adiw	r24, 0x01	; 1
 710:	4c 01       	movw	r8, r24
 712:	f7 01       	movw	r30, r14
 714:	93 81       	ldd	r25, Z+3	; 0x03
 716:	f6 01       	movw	r30, r12
 718:	93 fd       	sbrc	r25, 3
 71a:	85 91       	lpm	r24, Z+
 71c:	93 ff       	sbrs	r25, 3
 71e:	81 91       	ld	r24, Z+
 720:	6f 01       	movw	r12, r30
 722:	88 23       	and	r24, r24
 724:	09 f4       	brne	.+2      	; 0x728 <vfprintf+0x3a>
 726:	ab c1       	rjmp	.+854    	; 0xa7e <__stack+0x17f>
 728:	85 32       	cpi	r24, 0x25	; 37
 72a:	39 f4       	brne	.+14     	; 0x73a <vfprintf+0x4c>
 72c:	93 fd       	sbrc	r25, 3
 72e:	85 91       	lpm	r24, Z+
 730:	93 ff       	sbrs	r25, 3
 732:	81 91       	ld	r24, Z+
 734:	6f 01       	movw	r12, r30
 736:	85 32       	cpi	r24, 0x25	; 37
 738:	29 f4       	brne	.+10     	; 0x744 <vfprintf+0x56>
 73a:	b7 01       	movw	r22, r14
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 94 5f 05 	call	0xabe	; 0xabe <fputc>
 742:	e7 cf       	rjmp	.-50     	; 0x712 <vfprintf+0x24>
 744:	51 2c       	mov	r5, r1
 746:	31 2c       	mov	r3, r1
 748:	20 e0       	ldi	r18, 0x00	; 0
 74a:	20 32       	cpi	r18, 0x20	; 32
 74c:	a0 f4       	brcc	.+40     	; 0x776 <vfprintf+0x88>
 74e:	8b 32       	cpi	r24, 0x2B	; 43
 750:	69 f0       	breq	.+26     	; 0x76c <vfprintf+0x7e>
 752:	30 f4       	brcc	.+12     	; 0x760 <vfprintf+0x72>
 754:	80 32       	cpi	r24, 0x20	; 32
 756:	59 f0       	breq	.+22     	; 0x76e <vfprintf+0x80>
 758:	83 32       	cpi	r24, 0x23	; 35
 75a:	69 f4       	brne	.+26     	; 0x776 <vfprintf+0x88>
 75c:	20 61       	ori	r18, 0x10	; 16
 75e:	2c c0       	rjmp	.+88     	; 0x7b8 <vfprintf+0xca>
 760:	8d 32       	cpi	r24, 0x2D	; 45
 762:	39 f0       	breq	.+14     	; 0x772 <vfprintf+0x84>
 764:	80 33       	cpi	r24, 0x30	; 48
 766:	39 f4       	brne	.+14     	; 0x776 <vfprintf+0x88>
 768:	21 60       	ori	r18, 0x01	; 1
 76a:	26 c0       	rjmp	.+76     	; 0x7b8 <vfprintf+0xca>
 76c:	22 60       	ori	r18, 0x02	; 2
 76e:	24 60       	ori	r18, 0x04	; 4
 770:	23 c0       	rjmp	.+70     	; 0x7b8 <vfprintf+0xca>
 772:	28 60       	ori	r18, 0x08	; 8
 774:	21 c0       	rjmp	.+66     	; 0x7b8 <vfprintf+0xca>
 776:	27 fd       	sbrc	r18, 7
 778:	27 c0       	rjmp	.+78     	; 0x7c8 <vfprintf+0xda>
 77a:	30 ed       	ldi	r19, 0xD0	; 208
 77c:	38 0f       	add	r19, r24
 77e:	3a 30       	cpi	r19, 0x0A	; 10
 780:	78 f4       	brcc	.+30     	; 0x7a0 <vfprintf+0xb2>
 782:	26 ff       	sbrs	r18, 6
 784:	06 c0       	rjmp	.+12     	; 0x792 <vfprintf+0xa4>
 786:	fa e0       	ldi	r31, 0x0A	; 10
 788:	5f 9e       	mul	r5, r31
 78a:	30 0d       	add	r19, r0
 78c:	11 24       	eor	r1, r1
 78e:	53 2e       	mov	r5, r19
 790:	13 c0       	rjmp	.+38     	; 0x7b8 <vfprintf+0xca>
 792:	8a e0       	ldi	r24, 0x0A	; 10
 794:	38 9e       	mul	r3, r24
 796:	30 0d       	add	r19, r0
 798:	11 24       	eor	r1, r1
 79a:	33 2e       	mov	r3, r19
 79c:	20 62       	ori	r18, 0x20	; 32
 79e:	0c c0       	rjmp	.+24     	; 0x7b8 <vfprintf+0xca>
 7a0:	8e 32       	cpi	r24, 0x2E	; 46
 7a2:	21 f4       	brne	.+8      	; 0x7ac <vfprintf+0xbe>
 7a4:	26 fd       	sbrc	r18, 6
 7a6:	6b c1       	rjmp	.+726    	; 0xa7e <__stack+0x17f>
 7a8:	20 64       	ori	r18, 0x40	; 64
 7aa:	06 c0       	rjmp	.+12     	; 0x7b8 <vfprintf+0xca>
 7ac:	8c 36       	cpi	r24, 0x6C	; 108
 7ae:	11 f4       	brne	.+4      	; 0x7b4 <vfprintf+0xc6>
 7b0:	20 68       	ori	r18, 0x80	; 128
 7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <vfprintf+0xca>
 7b4:	88 36       	cpi	r24, 0x68	; 104
 7b6:	41 f4       	brne	.+16     	; 0x7c8 <vfprintf+0xda>
 7b8:	f6 01       	movw	r30, r12
 7ba:	93 fd       	sbrc	r25, 3
 7bc:	85 91       	lpm	r24, Z+
 7be:	93 ff       	sbrs	r25, 3
 7c0:	81 91       	ld	r24, Z+
 7c2:	6f 01       	movw	r12, r30
 7c4:	81 11       	cpse	r24, r1
 7c6:	c1 cf       	rjmp	.-126    	; 0x74a <vfprintf+0x5c>
 7c8:	98 2f       	mov	r25, r24
 7ca:	9f 7d       	andi	r25, 0xDF	; 223
 7cc:	95 54       	subi	r25, 0x45	; 69
 7ce:	93 30       	cpi	r25, 0x03	; 3
 7d0:	28 f4       	brcc	.+10     	; 0x7dc <vfprintf+0xee>
 7d2:	0c 5f       	subi	r16, 0xFC	; 252
 7d4:	1f 4f       	sbci	r17, 0xFF	; 255
 7d6:	ff e3       	ldi	r31, 0x3F	; 63
 7d8:	f9 83       	std	Y+1, r31	; 0x01
 7da:	0d c0       	rjmp	.+26     	; 0x7f6 <vfprintf+0x108>
 7dc:	83 36       	cpi	r24, 0x63	; 99
 7de:	31 f0       	breq	.+12     	; 0x7ec <vfprintf+0xfe>
 7e0:	83 37       	cpi	r24, 0x73	; 115
 7e2:	71 f0       	breq	.+28     	; 0x800 <vfprintf+0x112>
 7e4:	83 35       	cpi	r24, 0x53	; 83
 7e6:	09 f0       	breq	.+2      	; 0x7ea <vfprintf+0xfc>
 7e8:	5b c0       	rjmp	.+182    	; 0x8a0 <vfprintf+0x1b2>
 7ea:	22 c0       	rjmp	.+68     	; 0x830 <vfprintf+0x142>
 7ec:	f8 01       	movw	r30, r16
 7ee:	80 81       	ld	r24, Z
 7f0:	89 83       	std	Y+1, r24	; 0x01
 7f2:	0e 5f       	subi	r16, 0xFE	; 254
 7f4:	1f 4f       	sbci	r17, 0xFF	; 255
 7f6:	44 24       	eor	r4, r4
 7f8:	43 94       	inc	r4
 7fa:	51 2c       	mov	r5, r1
 7fc:	54 01       	movw	r10, r8
 7fe:	15 c0       	rjmp	.+42     	; 0x82a <vfprintf+0x13c>
 800:	38 01       	movw	r6, r16
 802:	f2 e0       	ldi	r31, 0x02	; 2
 804:	6f 0e       	add	r6, r31
 806:	71 1c       	adc	r7, r1
 808:	f8 01       	movw	r30, r16
 80a:	a0 80       	ld	r10, Z
 80c:	b1 80       	ldd	r11, Z+1	; 0x01
 80e:	26 ff       	sbrs	r18, 6
 810:	03 c0       	rjmp	.+6      	; 0x818 <vfprintf+0x12a>
 812:	65 2d       	mov	r22, r5
 814:	70 e0       	ldi	r23, 0x00	; 0
 816:	02 c0       	rjmp	.+4      	; 0x81c <vfprintf+0x12e>
 818:	6f ef       	ldi	r22, 0xFF	; 255
 81a:	7f ef       	ldi	r23, 0xFF	; 255
 81c:	c5 01       	movw	r24, r10
 81e:	2c 87       	std	Y+12, r18	; 0x0c
 820:	0e 94 54 05 	call	0xaa8	; 0xaa8 <strnlen>
 824:	2c 01       	movw	r4, r24
 826:	83 01       	movw	r16, r6
 828:	2c 85       	ldd	r18, Y+12	; 0x0c
 82a:	2f 77       	andi	r18, 0x7F	; 127
 82c:	22 2e       	mov	r2, r18
 82e:	17 c0       	rjmp	.+46     	; 0x85e <vfprintf+0x170>
 830:	38 01       	movw	r6, r16
 832:	f2 e0       	ldi	r31, 0x02	; 2
 834:	6f 0e       	add	r6, r31
 836:	71 1c       	adc	r7, r1
 838:	f8 01       	movw	r30, r16
 83a:	a0 80       	ld	r10, Z
 83c:	b1 80       	ldd	r11, Z+1	; 0x01
 83e:	26 ff       	sbrs	r18, 6
 840:	03 c0       	rjmp	.+6      	; 0x848 <vfprintf+0x15a>
 842:	65 2d       	mov	r22, r5
 844:	70 e0       	ldi	r23, 0x00	; 0
 846:	02 c0       	rjmp	.+4      	; 0x84c <vfprintf+0x15e>
 848:	6f ef       	ldi	r22, 0xFF	; 255
 84a:	7f ef       	ldi	r23, 0xFF	; 255
 84c:	c5 01       	movw	r24, r10
 84e:	2c 87       	std	Y+12, r18	; 0x0c
 850:	0e 94 49 05 	call	0xa92	; 0xa92 <strnlen_P>
 854:	2c 01       	movw	r4, r24
 856:	2c 85       	ldd	r18, Y+12	; 0x0c
 858:	20 68       	ori	r18, 0x80	; 128
 85a:	22 2e       	mov	r2, r18
 85c:	83 01       	movw	r16, r6
 85e:	23 fc       	sbrc	r2, 3
 860:	1b c0       	rjmp	.+54     	; 0x898 <vfprintf+0x1aa>
 862:	83 2d       	mov	r24, r3
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	48 16       	cp	r4, r24
 868:	59 06       	cpc	r5, r25
 86a:	b0 f4       	brcc	.+44     	; 0x898 <vfprintf+0x1aa>
 86c:	b7 01       	movw	r22, r14
 86e:	80 e2       	ldi	r24, 0x20	; 32
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	0e 94 5f 05 	call	0xabe	; 0xabe <fputc>
 876:	3a 94       	dec	r3
 878:	f4 cf       	rjmp	.-24     	; 0x862 <vfprintf+0x174>
 87a:	f5 01       	movw	r30, r10
 87c:	27 fc       	sbrc	r2, 7
 87e:	85 91       	lpm	r24, Z+
 880:	27 fe       	sbrs	r2, 7
 882:	81 91       	ld	r24, Z+
 884:	5f 01       	movw	r10, r30
 886:	b7 01       	movw	r22, r14
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	0e 94 5f 05 	call	0xabe	; 0xabe <fputc>
 88e:	31 10       	cpse	r3, r1
 890:	3a 94       	dec	r3
 892:	f1 e0       	ldi	r31, 0x01	; 1
 894:	4f 1a       	sub	r4, r31
 896:	51 08       	sbc	r5, r1
 898:	41 14       	cp	r4, r1
 89a:	51 04       	cpc	r5, r1
 89c:	71 f7       	brne	.-36     	; 0x87a <vfprintf+0x18c>
 89e:	e5 c0       	rjmp	.+458    	; 0xa6a <__stack+0x16b>
 8a0:	84 36       	cpi	r24, 0x64	; 100
 8a2:	11 f0       	breq	.+4      	; 0x8a8 <vfprintf+0x1ba>
 8a4:	89 36       	cpi	r24, 0x69	; 105
 8a6:	39 f5       	brne	.+78     	; 0x8f6 <vfprintf+0x208>
 8a8:	f8 01       	movw	r30, r16
 8aa:	27 ff       	sbrs	r18, 7
 8ac:	07 c0       	rjmp	.+14     	; 0x8bc <vfprintf+0x1ce>
 8ae:	60 81       	ld	r22, Z
 8b0:	71 81       	ldd	r23, Z+1	; 0x01
 8b2:	82 81       	ldd	r24, Z+2	; 0x02
 8b4:	93 81       	ldd	r25, Z+3	; 0x03
 8b6:	0c 5f       	subi	r16, 0xFC	; 252
 8b8:	1f 4f       	sbci	r17, 0xFF	; 255
 8ba:	08 c0       	rjmp	.+16     	; 0x8cc <vfprintf+0x1de>
 8bc:	60 81       	ld	r22, Z
 8be:	71 81       	ldd	r23, Z+1	; 0x01
 8c0:	07 2e       	mov	r0, r23
 8c2:	00 0c       	add	r0, r0
 8c4:	88 0b       	sbc	r24, r24
 8c6:	99 0b       	sbc	r25, r25
 8c8:	0e 5f       	subi	r16, 0xFE	; 254
 8ca:	1f 4f       	sbci	r17, 0xFF	; 255
 8cc:	2f 76       	andi	r18, 0x6F	; 111
 8ce:	72 2e       	mov	r7, r18
 8d0:	97 ff       	sbrs	r25, 7
 8d2:	09 c0       	rjmp	.+18     	; 0x8e6 <vfprintf+0x1f8>
 8d4:	90 95       	com	r25
 8d6:	80 95       	com	r24
 8d8:	70 95       	com	r23
 8da:	61 95       	neg	r22
 8dc:	7f 4f       	sbci	r23, 0xFF	; 255
 8de:	8f 4f       	sbci	r24, 0xFF	; 255
 8e0:	9f 4f       	sbci	r25, 0xFF	; 255
 8e2:	20 68       	ori	r18, 0x80	; 128
 8e4:	72 2e       	mov	r7, r18
 8e6:	2a e0       	ldi	r18, 0x0A	; 10
 8e8:	30 e0       	ldi	r19, 0x00	; 0
 8ea:	a4 01       	movw	r20, r8
 8ec:	0e 94 97 05 	call	0xb2e	; 0xb2e <__ultoa_invert>
 8f0:	a8 2e       	mov	r10, r24
 8f2:	a8 18       	sub	r10, r8
 8f4:	44 c0       	rjmp	.+136    	; 0x97e <__stack+0x7f>
 8f6:	85 37       	cpi	r24, 0x75	; 117
 8f8:	29 f4       	brne	.+10     	; 0x904 <__stack+0x5>
 8fa:	2f 7e       	andi	r18, 0xEF	; 239
 8fc:	b2 2e       	mov	r11, r18
 8fe:	2a e0       	ldi	r18, 0x0A	; 10
 900:	30 e0       	ldi	r19, 0x00	; 0
 902:	25 c0       	rjmp	.+74     	; 0x94e <__stack+0x4f>
 904:	f2 2f       	mov	r31, r18
 906:	f9 7f       	andi	r31, 0xF9	; 249
 908:	bf 2e       	mov	r11, r31
 90a:	8f 36       	cpi	r24, 0x6F	; 111
 90c:	c1 f0       	breq	.+48     	; 0x93e <__stack+0x3f>
 90e:	18 f4       	brcc	.+6      	; 0x916 <__stack+0x17>
 910:	88 35       	cpi	r24, 0x58	; 88
 912:	79 f0       	breq	.+30     	; 0x932 <__stack+0x33>
 914:	b4 c0       	rjmp	.+360    	; 0xa7e <__stack+0x17f>
 916:	80 37       	cpi	r24, 0x70	; 112
 918:	19 f0       	breq	.+6      	; 0x920 <__stack+0x21>
 91a:	88 37       	cpi	r24, 0x78	; 120
 91c:	21 f0       	breq	.+8      	; 0x926 <__stack+0x27>
 91e:	af c0       	rjmp	.+350    	; 0xa7e <__stack+0x17f>
 920:	2f 2f       	mov	r18, r31
 922:	20 61       	ori	r18, 0x10	; 16
 924:	b2 2e       	mov	r11, r18
 926:	b4 fe       	sbrs	r11, 4
 928:	0d c0       	rjmp	.+26     	; 0x944 <__stack+0x45>
 92a:	8b 2d       	mov	r24, r11
 92c:	84 60       	ori	r24, 0x04	; 4
 92e:	b8 2e       	mov	r11, r24
 930:	09 c0       	rjmp	.+18     	; 0x944 <__stack+0x45>
 932:	24 ff       	sbrs	r18, 4
 934:	0a c0       	rjmp	.+20     	; 0x94a <__stack+0x4b>
 936:	9f 2f       	mov	r25, r31
 938:	96 60       	ori	r25, 0x06	; 6
 93a:	b9 2e       	mov	r11, r25
 93c:	06 c0       	rjmp	.+12     	; 0x94a <__stack+0x4b>
 93e:	28 e0       	ldi	r18, 0x08	; 8
 940:	30 e0       	ldi	r19, 0x00	; 0
 942:	05 c0       	rjmp	.+10     	; 0x94e <__stack+0x4f>
 944:	20 e1       	ldi	r18, 0x10	; 16
 946:	30 e0       	ldi	r19, 0x00	; 0
 948:	02 c0       	rjmp	.+4      	; 0x94e <__stack+0x4f>
 94a:	20 e1       	ldi	r18, 0x10	; 16
 94c:	32 e0       	ldi	r19, 0x02	; 2
 94e:	f8 01       	movw	r30, r16
 950:	b7 fe       	sbrs	r11, 7
 952:	07 c0       	rjmp	.+14     	; 0x962 <__stack+0x63>
 954:	60 81       	ld	r22, Z
 956:	71 81       	ldd	r23, Z+1	; 0x01
 958:	82 81       	ldd	r24, Z+2	; 0x02
 95a:	93 81       	ldd	r25, Z+3	; 0x03
 95c:	0c 5f       	subi	r16, 0xFC	; 252
 95e:	1f 4f       	sbci	r17, 0xFF	; 255
 960:	06 c0       	rjmp	.+12     	; 0x96e <__stack+0x6f>
 962:	60 81       	ld	r22, Z
 964:	71 81       	ldd	r23, Z+1	; 0x01
 966:	80 e0       	ldi	r24, 0x00	; 0
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	0e 5f       	subi	r16, 0xFE	; 254
 96c:	1f 4f       	sbci	r17, 0xFF	; 255
 96e:	a4 01       	movw	r20, r8
 970:	0e 94 97 05 	call	0xb2e	; 0xb2e <__ultoa_invert>
 974:	a8 2e       	mov	r10, r24
 976:	a8 18       	sub	r10, r8
 978:	fb 2d       	mov	r31, r11
 97a:	ff 77       	andi	r31, 0x7F	; 127
 97c:	7f 2e       	mov	r7, r31
 97e:	76 fe       	sbrs	r7, 6
 980:	0b c0       	rjmp	.+22     	; 0x998 <__stack+0x99>
 982:	37 2d       	mov	r19, r7
 984:	3e 7f       	andi	r19, 0xFE	; 254
 986:	a5 14       	cp	r10, r5
 988:	50 f4       	brcc	.+20     	; 0x99e <__stack+0x9f>
 98a:	74 fe       	sbrs	r7, 4
 98c:	0a c0       	rjmp	.+20     	; 0x9a2 <__stack+0xa3>
 98e:	72 fc       	sbrc	r7, 2
 990:	08 c0       	rjmp	.+16     	; 0x9a2 <__stack+0xa3>
 992:	37 2d       	mov	r19, r7
 994:	3e 7e       	andi	r19, 0xEE	; 238
 996:	05 c0       	rjmp	.+10     	; 0x9a2 <__stack+0xa3>
 998:	ba 2c       	mov	r11, r10
 99a:	37 2d       	mov	r19, r7
 99c:	03 c0       	rjmp	.+6      	; 0x9a4 <__stack+0xa5>
 99e:	ba 2c       	mov	r11, r10
 9a0:	01 c0       	rjmp	.+2      	; 0x9a4 <__stack+0xa5>
 9a2:	b5 2c       	mov	r11, r5
 9a4:	34 ff       	sbrs	r19, 4
 9a6:	0d c0       	rjmp	.+26     	; 0x9c2 <__stack+0xc3>
 9a8:	fe 01       	movw	r30, r28
 9aa:	ea 0d       	add	r30, r10
 9ac:	f1 1d       	adc	r31, r1
 9ae:	80 81       	ld	r24, Z
 9b0:	80 33       	cpi	r24, 0x30	; 48
 9b2:	11 f4       	brne	.+4      	; 0x9b8 <__stack+0xb9>
 9b4:	39 7e       	andi	r19, 0xE9	; 233
 9b6:	09 c0       	rjmp	.+18     	; 0x9ca <__stack+0xcb>
 9b8:	32 ff       	sbrs	r19, 2
 9ba:	06 c0       	rjmp	.+12     	; 0x9c8 <__stack+0xc9>
 9bc:	b3 94       	inc	r11
 9be:	b3 94       	inc	r11
 9c0:	04 c0       	rjmp	.+8      	; 0x9ca <__stack+0xcb>
 9c2:	83 2f       	mov	r24, r19
 9c4:	86 78       	andi	r24, 0x86	; 134
 9c6:	09 f0       	breq	.+2      	; 0x9ca <__stack+0xcb>
 9c8:	b3 94       	inc	r11
 9ca:	33 fd       	sbrc	r19, 3
 9cc:	13 c0       	rjmp	.+38     	; 0x9f4 <__stack+0xf5>
 9ce:	30 ff       	sbrs	r19, 0
 9d0:	06 c0       	rjmp	.+12     	; 0x9de <__stack+0xdf>
 9d2:	5a 2c       	mov	r5, r10
 9d4:	b3 14       	cp	r11, r3
 9d6:	18 f4       	brcc	.+6      	; 0x9de <__stack+0xdf>
 9d8:	53 0c       	add	r5, r3
 9da:	5b 18       	sub	r5, r11
 9dc:	b3 2c       	mov	r11, r3
 9de:	b3 14       	cp	r11, r3
 9e0:	68 f4       	brcc	.+26     	; 0x9fc <__stack+0xfd>
 9e2:	b7 01       	movw	r22, r14
 9e4:	80 e2       	ldi	r24, 0x20	; 32
 9e6:	90 e0       	ldi	r25, 0x00	; 0
 9e8:	3c 87       	std	Y+12, r19	; 0x0c
 9ea:	0e 94 5f 05 	call	0xabe	; 0xabe <fputc>
 9ee:	b3 94       	inc	r11
 9f0:	3c 85       	ldd	r19, Y+12	; 0x0c
 9f2:	f5 cf       	rjmp	.-22     	; 0x9de <__stack+0xdf>
 9f4:	b3 14       	cp	r11, r3
 9f6:	10 f4       	brcc	.+4      	; 0x9fc <__stack+0xfd>
 9f8:	3b 18       	sub	r3, r11
 9fa:	01 c0       	rjmp	.+2      	; 0x9fe <__stack+0xff>
 9fc:	31 2c       	mov	r3, r1
 9fe:	34 ff       	sbrs	r19, 4
 a00:	12 c0       	rjmp	.+36     	; 0xa26 <__stack+0x127>
 a02:	b7 01       	movw	r22, r14
 a04:	80 e3       	ldi	r24, 0x30	; 48
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	3c 87       	std	Y+12, r19	; 0x0c
 a0a:	0e 94 5f 05 	call	0xabe	; 0xabe <fputc>
 a0e:	3c 85       	ldd	r19, Y+12	; 0x0c
 a10:	32 ff       	sbrs	r19, 2
 a12:	17 c0       	rjmp	.+46     	; 0xa42 <__stack+0x143>
 a14:	31 fd       	sbrc	r19, 1
 a16:	03 c0       	rjmp	.+6      	; 0xa1e <__stack+0x11f>
 a18:	88 e7       	ldi	r24, 0x78	; 120
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	02 c0       	rjmp	.+4      	; 0xa22 <__stack+0x123>
 a1e:	88 e5       	ldi	r24, 0x58	; 88
 a20:	90 e0       	ldi	r25, 0x00	; 0
 a22:	b7 01       	movw	r22, r14
 a24:	0c c0       	rjmp	.+24     	; 0xa3e <__stack+0x13f>
 a26:	83 2f       	mov	r24, r19
 a28:	86 78       	andi	r24, 0x86	; 134
 a2a:	59 f0       	breq	.+22     	; 0xa42 <__stack+0x143>
 a2c:	31 ff       	sbrs	r19, 1
 a2e:	02 c0       	rjmp	.+4      	; 0xa34 <__stack+0x135>
 a30:	8b e2       	ldi	r24, 0x2B	; 43
 a32:	01 c0       	rjmp	.+2      	; 0xa36 <__stack+0x137>
 a34:	80 e2       	ldi	r24, 0x20	; 32
 a36:	37 fd       	sbrc	r19, 7
 a38:	8d e2       	ldi	r24, 0x2D	; 45
 a3a:	b7 01       	movw	r22, r14
 a3c:	90 e0       	ldi	r25, 0x00	; 0
 a3e:	0e 94 5f 05 	call	0xabe	; 0xabe <fputc>
 a42:	a5 14       	cp	r10, r5
 a44:	38 f4       	brcc	.+14     	; 0xa54 <__stack+0x155>
 a46:	b7 01       	movw	r22, r14
 a48:	80 e3       	ldi	r24, 0x30	; 48
 a4a:	90 e0       	ldi	r25, 0x00	; 0
 a4c:	0e 94 5f 05 	call	0xabe	; 0xabe <fputc>
 a50:	5a 94       	dec	r5
 a52:	f7 cf       	rjmp	.-18     	; 0xa42 <__stack+0x143>
 a54:	aa 94       	dec	r10
 a56:	f4 01       	movw	r30, r8
 a58:	ea 0d       	add	r30, r10
 a5a:	f1 1d       	adc	r31, r1
 a5c:	80 81       	ld	r24, Z
 a5e:	b7 01       	movw	r22, r14
 a60:	90 e0       	ldi	r25, 0x00	; 0
 a62:	0e 94 5f 05 	call	0xabe	; 0xabe <fputc>
 a66:	a1 10       	cpse	r10, r1
 a68:	f5 cf       	rjmp	.-22     	; 0xa54 <__stack+0x155>
 a6a:	33 20       	and	r3, r3
 a6c:	09 f4       	brne	.+2      	; 0xa70 <__stack+0x171>
 a6e:	51 ce       	rjmp	.-862    	; 0x712 <vfprintf+0x24>
 a70:	b7 01       	movw	r22, r14
 a72:	80 e2       	ldi	r24, 0x20	; 32
 a74:	90 e0       	ldi	r25, 0x00	; 0
 a76:	0e 94 5f 05 	call	0xabe	; 0xabe <fputc>
 a7a:	3a 94       	dec	r3
 a7c:	f6 cf       	rjmp	.-20     	; 0xa6a <__stack+0x16b>
 a7e:	f7 01       	movw	r30, r14
 a80:	86 81       	ldd	r24, Z+6	; 0x06
 a82:	97 81       	ldd	r25, Z+7	; 0x07
 a84:	02 c0       	rjmp	.+4      	; 0xa8a <__stack+0x18b>
 a86:	8f ef       	ldi	r24, 0xFF	; 255
 a88:	9f ef       	ldi	r25, 0xFF	; 255
 a8a:	2c 96       	adiw	r28, 0x0c	; 12
 a8c:	e2 e1       	ldi	r30, 0x12	; 18
 a8e:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__epilogue_restores__>

00000a92 <strnlen_P>:
 a92:	fc 01       	movw	r30, r24
 a94:	05 90       	lpm	r0, Z+
 a96:	61 50       	subi	r22, 0x01	; 1
 a98:	70 40       	sbci	r23, 0x00	; 0
 a9a:	01 10       	cpse	r0, r1
 a9c:	d8 f7       	brcc	.-10     	; 0xa94 <strnlen_P+0x2>
 a9e:	80 95       	com	r24
 aa0:	90 95       	com	r25
 aa2:	8e 0f       	add	r24, r30
 aa4:	9f 1f       	adc	r25, r31
 aa6:	08 95       	ret

00000aa8 <strnlen>:
 aa8:	fc 01       	movw	r30, r24
 aaa:	61 50       	subi	r22, 0x01	; 1
 aac:	70 40       	sbci	r23, 0x00	; 0
 aae:	01 90       	ld	r0, Z+
 ab0:	01 10       	cpse	r0, r1
 ab2:	d8 f7       	brcc	.-10     	; 0xaaa <strnlen+0x2>
 ab4:	80 95       	com	r24
 ab6:	90 95       	com	r25
 ab8:	8e 0f       	add	r24, r30
 aba:	9f 1f       	adc	r25, r31
 abc:	08 95       	ret

00000abe <fputc>:
 abe:	0f 93       	push	r16
 ac0:	1f 93       	push	r17
 ac2:	cf 93       	push	r28
 ac4:	df 93       	push	r29
 ac6:	fb 01       	movw	r30, r22
 ac8:	23 81       	ldd	r18, Z+3	; 0x03
 aca:	21 fd       	sbrc	r18, 1
 acc:	03 c0       	rjmp	.+6      	; 0xad4 <fputc+0x16>
 ace:	8f ef       	ldi	r24, 0xFF	; 255
 ad0:	9f ef       	ldi	r25, 0xFF	; 255
 ad2:	28 c0       	rjmp	.+80     	; 0xb24 <fputc+0x66>
 ad4:	22 ff       	sbrs	r18, 2
 ad6:	16 c0       	rjmp	.+44     	; 0xb04 <fputc+0x46>
 ad8:	46 81       	ldd	r20, Z+6	; 0x06
 ada:	57 81       	ldd	r21, Z+7	; 0x07
 adc:	24 81       	ldd	r18, Z+4	; 0x04
 ade:	35 81       	ldd	r19, Z+5	; 0x05
 ae0:	42 17       	cp	r20, r18
 ae2:	53 07       	cpc	r21, r19
 ae4:	44 f4       	brge	.+16     	; 0xaf6 <fputc+0x38>
 ae6:	a0 81       	ld	r26, Z
 ae8:	b1 81       	ldd	r27, Z+1	; 0x01
 aea:	9d 01       	movw	r18, r26
 aec:	2f 5f       	subi	r18, 0xFF	; 255
 aee:	3f 4f       	sbci	r19, 0xFF	; 255
 af0:	31 83       	std	Z+1, r19	; 0x01
 af2:	20 83       	st	Z, r18
 af4:	8c 93       	st	X, r24
 af6:	26 81       	ldd	r18, Z+6	; 0x06
 af8:	37 81       	ldd	r19, Z+7	; 0x07
 afa:	2f 5f       	subi	r18, 0xFF	; 255
 afc:	3f 4f       	sbci	r19, 0xFF	; 255
 afe:	37 83       	std	Z+7, r19	; 0x07
 b00:	26 83       	std	Z+6, r18	; 0x06
 b02:	10 c0       	rjmp	.+32     	; 0xb24 <fputc+0x66>
 b04:	eb 01       	movw	r28, r22
 b06:	09 2f       	mov	r16, r25
 b08:	18 2f       	mov	r17, r24
 b0a:	00 84       	ldd	r0, Z+8	; 0x08
 b0c:	f1 85       	ldd	r31, Z+9	; 0x09
 b0e:	e0 2d       	mov	r30, r0
 b10:	09 95       	icall
 b12:	89 2b       	or	r24, r25
 b14:	e1 f6       	brne	.-72     	; 0xace <fputc+0x10>
 b16:	8e 81       	ldd	r24, Y+6	; 0x06
 b18:	9f 81       	ldd	r25, Y+7	; 0x07
 b1a:	01 96       	adiw	r24, 0x01	; 1
 b1c:	9f 83       	std	Y+7, r25	; 0x07
 b1e:	8e 83       	std	Y+6, r24	; 0x06
 b20:	81 2f       	mov	r24, r17
 b22:	90 2f       	mov	r25, r16
 b24:	df 91       	pop	r29
 b26:	cf 91       	pop	r28
 b28:	1f 91       	pop	r17
 b2a:	0f 91       	pop	r16
 b2c:	08 95       	ret

00000b2e <__ultoa_invert>:
 b2e:	fa 01       	movw	r30, r20
 b30:	aa 27       	eor	r26, r26
 b32:	28 30       	cpi	r18, 0x08	; 8
 b34:	51 f1       	breq	.+84     	; 0xb8a <__ultoa_invert+0x5c>
 b36:	20 31       	cpi	r18, 0x10	; 16
 b38:	81 f1       	breq	.+96     	; 0xb9a <__ultoa_invert+0x6c>
 b3a:	e8 94       	clt
 b3c:	6f 93       	push	r22
 b3e:	6e 7f       	andi	r22, 0xFE	; 254
 b40:	6e 5f       	subi	r22, 0xFE	; 254
 b42:	7f 4f       	sbci	r23, 0xFF	; 255
 b44:	8f 4f       	sbci	r24, 0xFF	; 255
 b46:	9f 4f       	sbci	r25, 0xFF	; 255
 b48:	af 4f       	sbci	r26, 0xFF	; 255
 b4a:	b1 e0       	ldi	r27, 0x01	; 1
 b4c:	3e d0       	rcall	.+124    	; 0xbca <__ultoa_invert+0x9c>
 b4e:	b4 e0       	ldi	r27, 0x04	; 4
 b50:	3c d0       	rcall	.+120    	; 0xbca <__ultoa_invert+0x9c>
 b52:	67 0f       	add	r22, r23
 b54:	78 1f       	adc	r23, r24
 b56:	89 1f       	adc	r24, r25
 b58:	9a 1f       	adc	r25, r26
 b5a:	a1 1d       	adc	r26, r1
 b5c:	68 0f       	add	r22, r24
 b5e:	79 1f       	adc	r23, r25
 b60:	8a 1f       	adc	r24, r26
 b62:	91 1d       	adc	r25, r1
 b64:	a1 1d       	adc	r26, r1
 b66:	6a 0f       	add	r22, r26
 b68:	71 1d       	adc	r23, r1
 b6a:	81 1d       	adc	r24, r1
 b6c:	91 1d       	adc	r25, r1
 b6e:	a1 1d       	adc	r26, r1
 b70:	20 d0       	rcall	.+64     	; 0xbb2 <__ultoa_invert+0x84>
 b72:	09 f4       	brne	.+2      	; 0xb76 <__ultoa_invert+0x48>
 b74:	68 94       	set
 b76:	3f 91       	pop	r19
 b78:	2a e0       	ldi	r18, 0x0A	; 10
 b7a:	26 9f       	mul	r18, r22
 b7c:	11 24       	eor	r1, r1
 b7e:	30 19       	sub	r19, r0
 b80:	30 5d       	subi	r19, 0xD0	; 208
 b82:	31 93       	st	Z+, r19
 b84:	de f6       	brtc	.-74     	; 0xb3c <__ultoa_invert+0xe>
 b86:	cf 01       	movw	r24, r30
 b88:	08 95       	ret
 b8a:	46 2f       	mov	r20, r22
 b8c:	47 70       	andi	r20, 0x07	; 7
 b8e:	40 5d       	subi	r20, 0xD0	; 208
 b90:	41 93       	st	Z+, r20
 b92:	b3 e0       	ldi	r27, 0x03	; 3
 b94:	0f d0       	rcall	.+30     	; 0xbb4 <__ultoa_invert+0x86>
 b96:	c9 f7       	brne	.-14     	; 0xb8a <__ultoa_invert+0x5c>
 b98:	f6 cf       	rjmp	.-20     	; 0xb86 <__ultoa_invert+0x58>
 b9a:	46 2f       	mov	r20, r22
 b9c:	4f 70       	andi	r20, 0x0F	; 15
 b9e:	40 5d       	subi	r20, 0xD0	; 208
 ba0:	4a 33       	cpi	r20, 0x3A	; 58
 ba2:	18 f0       	brcs	.+6      	; 0xbaa <__ultoa_invert+0x7c>
 ba4:	49 5d       	subi	r20, 0xD9	; 217
 ba6:	31 fd       	sbrc	r19, 1
 ba8:	40 52       	subi	r20, 0x20	; 32
 baa:	41 93       	st	Z+, r20
 bac:	02 d0       	rcall	.+4      	; 0xbb2 <__ultoa_invert+0x84>
 bae:	a9 f7       	brne	.-22     	; 0xb9a <__ultoa_invert+0x6c>
 bb0:	ea cf       	rjmp	.-44     	; 0xb86 <__ultoa_invert+0x58>
 bb2:	b4 e0       	ldi	r27, 0x04	; 4
 bb4:	a6 95       	lsr	r26
 bb6:	97 95       	ror	r25
 bb8:	87 95       	ror	r24
 bba:	77 95       	ror	r23
 bbc:	67 95       	ror	r22
 bbe:	ba 95       	dec	r27
 bc0:	c9 f7       	brne	.-14     	; 0xbb4 <__ultoa_invert+0x86>
 bc2:	00 97       	sbiw	r24, 0x00	; 0
 bc4:	61 05       	cpc	r22, r1
 bc6:	71 05       	cpc	r23, r1
 bc8:	08 95       	ret
 bca:	9b 01       	movw	r18, r22
 bcc:	ac 01       	movw	r20, r24
 bce:	0a 2e       	mov	r0, r26
 bd0:	06 94       	lsr	r0
 bd2:	57 95       	ror	r21
 bd4:	47 95       	ror	r20
 bd6:	37 95       	ror	r19
 bd8:	27 95       	ror	r18
 bda:	ba 95       	dec	r27
 bdc:	c9 f7       	brne	.-14     	; 0xbd0 <__ultoa_invert+0xa2>
 bde:	62 0f       	add	r22, r18
 be0:	73 1f       	adc	r23, r19
 be2:	84 1f       	adc	r24, r20
 be4:	95 1f       	adc	r25, r21
 be6:	a0 1d       	adc	r26, r0
 be8:	08 95       	ret

00000bea <__prologue_saves__>:
 bea:	2f 92       	push	r2
 bec:	3f 92       	push	r3
 bee:	4f 92       	push	r4
 bf0:	5f 92       	push	r5
 bf2:	6f 92       	push	r6
 bf4:	7f 92       	push	r7
 bf6:	8f 92       	push	r8
 bf8:	9f 92       	push	r9
 bfa:	af 92       	push	r10
 bfc:	bf 92       	push	r11
 bfe:	cf 92       	push	r12
 c00:	df 92       	push	r13
 c02:	ef 92       	push	r14
 c04:	ff 92       	push	r15
 c06:	0f 93       	push	r16
 c08:	1f 93       	push	r17
 c0a:	cf 93       	push	r28
 c0c:	df 93       	push	r29
 c0e:	cd b7       	in	r28, 0x3d	; 61
 c10:	de b7       	in	r29, 0x3e	; 62
 c12:	ca 1b       	sub	r28, r26
 c14:	db 0b       	sbc	r29, r27
 c16:	0f b6       	in	r0, 0x3f	; 63
 c18:	f8 94       	cli
 c1a:	de bf       	out	0x3e, r29	; 62
 c1c:	0f be       	out	0x3f, r0	; 63
 c1e:	cd bf       	out	0x3d, r28	; 61
 c20:	09 94       	ijmp

00000c22 <__epilogue_restores__>:
 c22:	2a 88       	ldd	r2, Y+18	; 0x12
 c24:	39 88       	ldd	r3, Y+17	; 0x11
 c26:	48 88       	ldd	r4, Y+16	; 0x10
 c28:	5f 84       	ldd	r5, Y+15	; 0x0f
 c2a:	6e 84       	ldd	r6, Y+14	; 0x0e
 c2c:	7d 84       	ldd	r7, Y+13	; 0x0d
 c2e:	8c 84       	ldd	r8, Y+12	; 0x0c
 c30:	9b 84       	ldd	r9, Y+11	; 0x0b
 c32:	aa 84       	ldd	r10, Y+10	; 0x0a
 c34:	b9 84       	ldd	r11, Y+9	; 0x09
 c36:	c8 84       	ldd	r12, Y+8	; 0x08
 c38:	df 80       	ldd	r13, Y+7	; 0x07
 c3a:	ee 80       	ldd	r14, Y+6	; 0x06
 c3c:	fd 80       	ldd	r15, Y+5	; 0x05
 c3e:	0c 81       	ldd	r16, Y+4	; 0x04
 c40:	1b 81       	ldd	r17, Y+3	; 0x03
 c42:	aa 81       	ldd	r26, Y+2	; 0x02
 c44:	b9 81       	ldd	r27, Y+1	; 0x01
 c46:	ce 0f       	add	r28, r30
 c48:	d1 1d       	adc	r29, r1
 c4a:	0f b6       	in	r0, 0x3f	; 63
 c4c:	f8 94       	cli
 c4e:	de bf       	out	0x3e, r29	; 62
 c50:	0f be       	out	0x3f, r0	; 63
 c52:	cd bf       	out	0x3d, r28	; 61
 c54:	ed 01       	movw	r28, r26
 c56:	08 95       	ret

00000c58 <_exit>:
 c58:	f8 94       	cli

00000c5a <__stop_program>:
 c5a:	ff cf       	rjmp	.-2      	; 0xc5a <__stop_program>
